[project]
name = "ebird-notebooks"
version = "0.1.0"
description = "A Django-based workbench for creating Jupyter Notebooks to analyse data from eBird."
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "django-environ>=0.11.2",
    "django-extensions>=3.2.3",
    "django>=5.1.4",
    "ebird-codes>=0.0.2",
    "ipython>=8.31.0",
    "jupyterlab>=4.2.5",
    "notebook>=7.2.2",
    "python-dotenv>=1.0.1",
    "matplotlib>=3.10.1",
    "psycopg2-binary>=2.9.10",
    "ebird-api-data==0.2.0",
    "factory-boy>=3.3.3",
    "tabulate>=0.9.0",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Django",
    "Framework :: Django :: 5",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

[tool.uv]
dev-dependencies = [
    "bump-my-version>=0.28.1",
    "nbqa>=1.9.1",
    "pre-commit>=4.0.1",
    "ruff>=0.8.0",
    "rust-just>=1.38.0",
]

[tool.bumpversion]
current_version = "0.1.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
ignore_missing_version = false
tag = true
sign_tags = true
tag_name = "v{new_version}"
tag_message = "New version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "New version: {current_version} → {new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "config/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = """
## Latest
"""
replace = """
## Latest

## {new_version} - {now:%Y-%m-%d}
"""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "CITATION.cff"
search = "version: {current_version}"
replace = "version: {new_version}"

[[tool.bumpversion.files]]
filename = "CITATION.cff"
search = "^date-released: \\d{{4}}-\\d{{2}}-\\d{{2}}$"
replace = "date-released: {now:%Y-%m-%d}"
regex = true

[tool.pytest.ini_options]
pythonpath = [
    "."
]
testpaths = [
    "tests"
]
